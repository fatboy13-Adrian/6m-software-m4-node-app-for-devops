version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test
  scan:
        docker:
            - image: cimg/node:16.10
        environment:
            IMAGE_NAME: edisonzsq/education-space
        steps:
            - checkout
            - setup_remote_docker      
            - docker/check
            - run: docker build -t $IMAGE_NAME .
            - snyk/scan: 
                docker-image-name: $IMAGE_NAME
  codescan:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - snyk/install
      - run: |
          snyk code test
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKERHUB_LOGIN  # DOCKER_LOGIN is the default value, if it exists, it automatically would be used.
          docker-password: DOCKERHUB_PASSWORD  # DOCKER_PASSWORD is the default value
      - docker/build:
          image: wongshennan/test_repository
      - docker/push:
          image: wongshennan/test_repository
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker      
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: | 
              heroku container:login
              heroku stack:set container -a shennan-su-devops
              heroku container:push web -a shennan-su-devops
              heroku container:release web -a shennan-su-devops

workflows:
  simple_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish:
          requires:
            - test
      - deploy:
          requires:
            - publish
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main
      - codescan:
          requires:
            - build
          filters:
            branches:
              only: main